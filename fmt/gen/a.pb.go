// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.14.0
// source: a.proto

package gen

import (
	protoreflect "my-go/fmt/protobuf-go/reflect/protoreflect"
	protoimpl "my-go/fmt/protobuf-go/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolVersion  string            `protobuf:"bytes,1,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	LogId            string            `protobuf:"bytes,2,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	SessionId        string            `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	EventTime        int64             `protobuf:"varint,4,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	ClientIp         string            `protobuf:"bytes,5,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	Element          string            `protobuf:"bytes,6,opt,name=element,proto3" json:"element,omitempty"`
	App              string            `protobuf:"bytes,7,opt,name=app,proto3" json:"app,omitempty"`
	Page             string            `protobuf:"bytes,8,opt,name=page,proto3" json:"page,omitempty"`
	Module           string            `protobuf:"bytes,9,opt,name=module,proto3" json:"module,omitempty"`
	Action           string            `protobuf:"bytes,10,opt,name=action,proto3" json:"action,omitempty"`
	Referer          string            `protobuf:"bytes,11,opt,name=referer,proto3" json:"referer,omitempty"`
	Os               string            `protobuf:"bytes,12,opt,name=os,proto3" json:"os,omitempty"`
	Device           string            `protobuf:"bytes,13,opt,name=device,proto3" json:"device,omitempty"`
	DistinctId       string            `protobuf:"bytes,14,opt,name=distinct_id,json=distinctId,proto3" json:"distinct_id,omitempty"`
	Tk               string            `protobuf:"bytes,15,opt,name=tk,proto3" json:"tk,omitempty"`
	Mid              string            `protobuf:"bytes,16,opt,name=mid,proto3" json:"mid,omitempty"`
	Uuid             string            `protobuf:"bytes,17,opt,name=uuid,proto3" json:"uuid,omitempty"`
	AppVersion       string            `protobuf:"bytes,18,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	OsVersion        string            `protobuf:"bytes,19,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	DeviceMode       string            `protobuf:"bytes,20,opt,name=device_mode,json=deviceMode,proto3" json:"device_mode,omitempty"`
	DeviceManu       string            `protobuf:"bytes,21,opt,name=device_manu,json=deviceManu,proto3" json:"device_manu,omitempty"`
	OsCode           int64             `protobuf:"varint,22,opt,name=os_code,json=osCode,proto3" json:"os_code,omitempty"`
	DeviceBrand      string            `protobuf:"bytes,23,opt,name=device_brand,json=deviceBrand,proto3" json:"device_brand,omitempty"`
	ScreenWidth      string            `protobuf:"bytes,24,opt,name=screen_width,json=screenWidth,proto3" json:"screen_width,omitempty"`
	ScreenHeight     string            `protobuf:"bytes,25,opt,name=screen_height,json=screenHeight,proto3" json:"screen_height,omitempty"`
	DeviceCarrier    string            `protobuf:"bytes,26,opt,name=device_carrier,json=deviceCarrier,proto3" json:"device_carrier,omitempty"`
	Dtu              string            `protobuf:"bytes,27,opt,name=dtu,proto3" json:"dtu,omitempty"`
	Network          string            `protobuf:"bytes,28,opt,name=network,proto3" json:"network,omitempty"`
	VestName         string            `protobuf:"bytes,29,opt,name=vest_name,json=vestName,proto3" json:"vest_name,omitempty"`
	Env              string            `protobuf:"bytes,30,opt,name=env,proto3" json:"env,omitempty"`
	Lat              string            `protobuf:"bytes,31,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon              string            `protobuf:"bytes,32,opt,name=lon,proto3" json:"lon,omitempty"`
	AppSubversion    string            `protobuf:"bytes,33,opt,name=app_subversion,json=appSubversion,proto3" json:"app_subversion,omitempty"`
	Topic            string            `protobuf:"bytes,34,opt,name=topic,proto3" json:"topic,omitempty"`
	ArriveTime       int64             `protobuf:"varint,36,opt,name=arrive_time,json=arriveTime,proto3" json:"arrive_time,omitempty"`
	Event            string            `protobuf:"bytes,37,opt,name=event,proto3" json:"event,omitempty"`
	AndroidId        string            `protobuf:"bytes,38,opt,name=android_id,json=androidId,proto3" json:"android_id,omitempty"`
	Tuid             string            `protobuf:"bytes,39,opt,name=tuid,proto3" json:"tuid,omitempty"`
	Platform         string            `protobuf:"bytes,40,opt,name=platform,proto3" json:"platform,omitempty"`
	RefModuleId      string            `protobuf:"bytes,41,opt,name=ref_module_id,json=refModuleId,proto3" json:"ref_module_id,omitempty"`
	ReferEventId     string            `protobuf:"bytes,42,opt,name=refer_event_id,json=referEventId,proto3" json:"refer_event_id,omitempty"`
	ScreenSize       string            `protobuf:"bytes,43,opt,name=screen_size,json=screenSize,proto3" json:"screen_size,omitempty"`
	ScreenResolution string            `protobuf:"bytes,44,opt,name=screen_resolution,json=screenResolution,proto3" json:"screen_resolution,omitempty"`
	Nm               string            `protobuf:"bytes,45,opt,name=nm,proto3" json:"nm,omitempty"`
	BundleId         string            `protobuf:"bytes,46,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	DeviceUuid       string            `protobuf:"bytes,47,opt,name=device_uuid,json=deviceUuid,proto3" json:"device_uuid,omitempty"`
	MpSystemInfo     string            `protobuf:"bytes,48,opt,name=mp_system_info,json=mpSystemInfo,proto3" json:"mp_system_info,omitempty"`
	WxOpenId         string            `protobuf:"bytes,49,opt,name=wx_open_id,json=wxOpenId,proto3" json:"wx_open_id,omitempty"`
	UserAgent        string            `protobuf:"bytes,50,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	ExtendInfo       map[string]string `protobuf:"bytes,35,rep,name=extend_info,json=extendInfo,proto3" json:"extend_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_a_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_a_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_a_proto_rawDescGZIP(), []int{0}
}

func (x *Log) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *Log) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *Log) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Log) GetEventTime() int64 {
	if x != nil {
		return x.EventTime
	}
	return 0
}

func (x *Log) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *Log) GetElement() string {
	if x != nil {
		return x.Element
	}
	return ""
}

func (x *Log) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *Log) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *Log) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *Log) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Log) GetReferer() string {
	if x != nil {
		return x.Referer
	}
	return ""
}

func (x *Log) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Log) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Log) GetDistinctId() string {
	if x != nil {
		return x.DistinctId
	}
	return ""
}

func (x *Log) GetTk() string {
	if x != nil {
		return x.Tk
	}
	return ""
}

func (x *Log) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *Log) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Log) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *Log) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *Log) GetDeviceMode() string {
	if x != nil {
		return x.DeviceMode
	}
	return ""
}

func (x *Log) GetDeviceManu() string {
	if x != nil {
		return x.DeviceManu
	}
	return ""
}

func (x *Log) GetOsCode() int64 {
	if x != nil {
		return x.OsCode
	}
	return 0
}

func (x *Log) GetDeviceBrand() string {
	if x != nil {
		return x.DeviceBrand
	}
	return ""
}

func (x *Log) GetScreenWidth() string {
	if x != nil {
		return x.ScreenWidth
	}
	return ""
}

func (x *Log) GetScreenHeight() string {
	if x != nil {
		return x.ScreenHeight
	}
	return ""
}

func (x *Log) GetDeviceCarrier() string {
	if x != nil {
		return x.DeviceCarrier
	}
	return ""
}

func (x *Log) GetDtu() string {
	if x != nil {
		return x.Dtu
	}
	return ""
}

func (x *Log) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Log) GetVestName() string {
	if x != nil {
		return x.VestName
	}
	return ""
}

func (x *Log) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *Log) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *Log) GetLon() string {
	if x != nil {
		return x.Lon
	}
	return ""
}

func (x *Log) GetAppSubversion() string {
	if x != nil {
		return x.AppSubversion
	}
	return ""
}

func (x *Log) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Log) GetArriveTime() int64 {
	if x != nil {
		return x.ArriveTime
	}
	return 0
}

func (x *Log) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *Log) GetAndroidId() string {
	if x != nil {
		return x.AndroidId
	}
	return ""
}

func (x *Log) GetTuid() string {
	if x != nil {
		return x.Tuid
	}
	return ""
}

func (x *Log) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Log) GetRefModuleId() string {
	if x != nil {
		return x.RefModuleId
	}
	return ""
}

func (x *Log) GetReferEventId() string {
	if x != nil {
		return x.ReferEventId
	}
	return ""
}

func (x *Log) GetScreenSize() string {
	if x != nil {
		return x.ScreenSize
	}
	return ""
}

func (x *Log) GetScreenResolution() string {
	if x != nil {
		return x.ScreenResolution
	}
	return ""
}

func (x *Log) GetNm() string {
	if x != nil {
		return x.Nm
	}
	return ""
}

func (x *Log) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *Log) GetDeviceUuid() string {
	if x != nil {
		return x.DeviceUuid
	}
	return ""
}

func (x *Log) GetMpSystemInfo() string {
	if x != nil {
		return x.MpSystemInfo
	}
	return ""
}

func (x *Log) GetWxOpenId() string {
	if x != nil {
		return x.WxOpenId
	}
	return ""
}

func (x *Log) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *Log) GetExtendInfo() map[string]string {
	if x != nil {
		return x.ExtendInfo
	}
	return nil
}

var File_a_proto protoreflect.FileDescriptor

var file_a_proto_rawDesc = []byte{
	0x0a, 0x07, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x62, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xe0, 0x0b, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x70, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6b, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6e,
	0x75, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6f, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x74, 0x75, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x74, 0x75, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x70, 0x70, 0x5f, 0x73, 0x75, 0x62, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x53, 0x75, 0x62, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x72, 0x69,
	0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61,
	0x72, 0x72, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x26, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x75, 0x69, 0x64, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x22,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6d, 0x18, 0x2d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6e, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x70, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x70,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x0a, 0x77, 0x78,
	0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x77, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x23, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x62, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x6f, 0x67, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x3d, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x70, 0x61, 0x74, 0x68, 0x2f,
	0x67, 0x65, 0x6e, 0x3b, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_a_proto_rawDescOnce sync.Once
	file_a_proto_rawDescData = file_a_proto_rawDesc
)

func file_a_proto_rawDescGZIP() []byte {
	file_a_proto_rawDescOnce.Do(func() {
		file_a_proto_rawDescData = protoimpl.X.CompressGZIP(file_a_proto_rawDescData)
	})
	return file_a_proto_rawDescData
}

var file_a_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_a_proto_goTypes = []interface{}{
	(*Log)(nil), // 0: pbdata.Log
	nil,         // 1: pbdata.Log.ExtendInfoEntry
}
var file_a_proto_depIdxs = []int32{
	1, // 0: pbdata.Log.extend_info:type_name -> pbdata.Log.ExtendInfoEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_a_proto_init() }
func file_a_proto_init() {
	if File_a_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_a_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_a_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_a_proto_goTypes,
		DependencyIndexes: file_a_proto_depIdxs,
		MessageInfos:      file_a_proto_msgTypes,
	}.Build()
	File_a_proto = out.File
	file_a_proto_rawDesc = nil
	file_a_proto_goTypes = nil
	file_a_proto_depIdxs = nil
}
