package fmt

import (
	"fmt"
	"my-go/fmt/gen"
	"my-go/fmt/mahonia"
	"my-go/fmt/protobuf/proto"
	"strconv"
	"testing"
)

func TestSprintf(t *testing.T) {
	yearRate := fmt.Sprintf("%.2f", (2777.4181-3050.12)/3050.12*100)
	fmt.Println(yearRate, 2777.4181-3050.12)
}

func TestName(t *testing.T) {
	var res gen.Log
	x := []byte{0xa, 0x3, 0x33, 0x2e, 0x30, 0x12, 0x20, 0x66, 0x65, 0x39, 0x37, 0x66, 0x35, 0x38, 0x61, 0x32, 0x32, 0x31, 0x35, 0x38, 0x36, 0x37, 0x62, 0x39, 0x33, 0x31, 0x66, 0x39, 0x66, 0x65, 0x31, 0x39, 0x32, 0x35, 0x34, 0x34, 0x61, 0x38, 0x32, 0x1a, 0x20, 0x32, 0x66, 0x63, 0x62, 0x63, 0x63, 0x37, 0x33, 0x32, 0x66, 0x35, 0x65, 0x34, 0x38, 0x66, 0x66, 0x62, 0x30, 0x39, 0x63, 0x37, 0x30, 0x34, 0x61, 0x33, 0x34, 0x34, 0x39, 0x31, 0x35, 0x38, 0x61, 0x20, 0xde, 0xde, 0xf7, 0xe9, 0x85, 0x2f, 0x2a, 0xd, 0x35, 0x38, 0x2e, 0x32, 0x34, 0x36, 0x2e, 0x31, 0x39, 0x35, 0x2e, 0x35, 0x38, 0x3a, 0xa, 0x63, 0x6f, 0x69, 0x6e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x8, 0x53, 0x68, 0x6f, 0x70, 0x70, 0x61, 0x67, 0x65, 0x4a, 0x8, 0x53, 0x68, 0x6f, 0x70, 0x70, 0x61, 0x67, 0x65, 0x52, 0x2, 0x70, 0x76, 0x62, 0x7, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x7a, 0x30, 0x41, 0x43, 0x46, 0x32, 0x73, 0x42, 0x45, 0x79, 0x62, 0x67, 0x49, 0x5a, 0x54, 0x61, 0x4e, 0x49, 0x6f, 0x34, 0x51, 0x6e, 0x43, 0x47, 0x56, 0x45, 0x64, 0x33, 0x63, 0x6d, 0x64, 0x39, 0x49, 0x32, 0x41, 0x4d, 0x68, 0x6a, 0x62, 0x32, 0x6c, 0x75, 0x62, 0x57, 0x46, 0x7a, 0x64, 0x47, 0x56, 0x79, 0x82, 0x1, 0x1, 0x36, 0x8a, 0x1, 0x20, 0x63, 0x35, 0x33, 0x39, 0x62, 0x33, 0x63, 0x35, 0x35, 0x36, 0x36, 0x33, 0x34, 0x62, 0x64, 0x66, 0x62, 0x35, 0x36, 0x38, 0x66, 0x64, 0x62, 0x65, 0x65, 0x36, 0x34, 0x61, 0x30, 0x37, 0x61, 0x36, 0x92, 0x1, 0x5, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x9a, 0x1, 0x5, 0x38, 0x2e, 0x30, 0x2e, 0x30, 0xa2, 0x1, 0x8, 0x53, 0x4d, 0x2d, 0x47, 0x39, 0x33, 0x30, 0x38, 0xaa, 0x1, 0x7, 0x73, 0x61, 0x6d, 0x73, 0x75, 0x6e, 0x67, 0xb0, 0x1, 0x1a, 0xba, 0x1, 0x7, 0x73, 0x61, 0x6d, 0x73, 0x75, 0x6e, 0x67, 0xc2, 0x1, 0x4, 0x31, 0x30, 0x38, 0x30, 0xca, 0x1, 0x4, 0x31, 0x39, 0x32, 0x30, 0xda, 0x1, 0x3, 0x30, 0x30, 0x34, 0xe2, 0x1, 0x4, 0x77, 0x69, 0x66, 0x69, 0xf2, 0x1, 0x4, 0x70, 0x72, 0x6f, 0x64, 0x8a, 0x2, 0x1, 0x34, 0x92, 0x2, 0x15, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x9a, 0x2, 0xe, 0xa, 0x7, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x3, 0x79, 0x79, 0x62, 0x9a, 0x2, 0xa, 0xa, 0x4, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2, 0x70, 0x76, 0x9a, 0x2, 0x39, 0xa, 0x5, 0x6f, 0x72, 0x67, 0x74, 0x6b, 0x12, 0x30, 0x41, 0x43, 0x46, 0x32, 0x73, 0x42, 0x45, 0x79, 0x62, 0x67, 0x49, 0x5a, 0x54, 0x61, 0x4e, 0x49, 0x6f, 0x34, 0x51, 0x6e, 0x43, 0x47, 0x56, 0x45, 0x64, 0x33, 0x63, 0x6d, 0x64, 0x39, 0x49, 0x32, 0x41, 0x4d, 0x68, 0x6a, 0x62, 0x32, 0x6c, 0x75, 0x62, 0x57, 0x46, 0x7a, 0x64, 0x47, 0x56, 0x79, 0x9a, 0x2, 0x21, 0xa, 0x7, 0x6f, 0x72, 0x67, 0x74, 0x75, 0x69, 0x64, 0x12, 0x16, 0x64, 0x72, 0x41, 0x52, 0x4d, 0x6d, 0x34, 0x43, 0x47, 0x55, 0x32, 0x6a, 0x53, 0x4b, 0x4f, 0x45, 0x4a, 0x77, 0x68, 0x6c, 0x52, 0x41, 0xa0, 0x2, 0xf3, 0xdd, 0xf7, 0xe9, 0x85, 0x2f, 0xaa, 0x2, 0x5, 0x70, 0x75, 0x5f, 0x70, 0x76, 0xba, 0x2, 0x16, 0x64, 0x72, 0x41, 0x52, 0x4d, 0x6d, 0x34, 0x43, 0x47, 0x55, 0x32, 0x6a, 0x53, 0x4b, 0x4f, 0x45, 0x4a, 0x77, 0x68, 0x6c, 0x52, 0x41, 0xc2, 0x2, 0x7, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0xda, 0x2, 0x3, 0x34, 0x2e, 0x36, 0xe2, 0x2, 0x9, 0x31, 0x39, 0x32, 0x30, 0x78, 0x31, 0x30, 0x38, 0x30, 0x92, 0x3, 0xd, 0x6f, 0x6b, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x33, 0x2e, 0x31, 0x32, 0x2e, 0x30}
	fmt.Println(proto.Unmarshal(x, &res))
	fmt.Println(res.Topic, res.LogId)
}

func ConvertToString(src string, srcCode string, tagCode string) string {
	srcCoder := mahonia.NewDecoder(srcCode)
	srcResult := srcCoder.ConvertString(src)
	tagCoder := mahonia.NewDecoder(tagCode)
	_, cdata, _ := tagCoder.Translate([]byte(srcResult), true)
	result := string(cdata)
	return result
}

func TestString(t *testing.T) {
	fmt.Println(strconv.Itoa(1))
}

func TestSwitch(t *testing.T) {
	for i:=0; i<10; i++ {
		switch i {
		case 5:
			continue
		}
		fmt.Println(i)
	}
}

